{
  "DataVersion": "2.0.0-dev.00038",
  "Configuration": {
    "insanitybot": {
      "error": {
        "lacking_permission": "You are lacking permission to perform this command! Please contact your administrators if you believe this is an error.",
        "lacking_admin_permission": "You cannot execute this command as you are not a server administrator!",
        "generic": "The command failed to execute. Please retry or contact your administrators."
      },
      "moderation": {
        "warn": {
          "success": "{MENTION} was warned successfully.",
          "failure": "{MENTION} could not be warned.",
          "reason": "You were warned for {REASON}."
        },
        "unwarn": {
          "success": "{MENTION} was unwarned successfully.",
          "failure": "{MENTION} could not be unwarned."
        },
        "mute": {
          "success": "{MENTION} was muted successfully.",
          "failure": "{MENTION} could not be muted.",
          "reason": "You were muted for {REASON}."
        },
        "unmute": {
          "success": "{MENTION} was unmuted successfully.",
          "failure": "{MENTION} could not be unmuted.",
          "reason": "You were unmuted!"
        },
        "blacklist": {
          "success": "{MENTION} was blacklisted successfully.",
          "failure": "{MENTION} could not be blacklisted",
          "reason": "You were blacklisted for {REASON}."
        },
        "whitelist": {
          "success": "{MENTION} was whitelisted successfully.",
          "failure": "{MENTION} could not be whitelisted.",
          "reason": "You were whitelisted!"
        },
        "kick": {
          "success": "{MENTION} was kicked successfully.",
          "failure": "{MENTION} could not be kicked.",
          "reason": "You were kicked for {REASON}."
        },
        "ban": {
          "success": "{MENTION} was banned successfully",
          "failure": "{MENTION} could not be banned.",
          "reason": "You were banned for {REASON}."
        },
        "unban": {
          "success": "{MENTION} was unbanned successfully.",
          "failure": "{MENTION} could not be unbanned."
        },
        "clear_modlog": {
          "success": "{MENTION}'s modlog was cleared successfully.",
          "failure": "{MENTION}'s modlog could not be cleared."
        },
        "purge": {
          "success": "Messages were deleted successfully.",
          "failure": "Messages could not be deleted.",
          "default_reason": "No reason given."
        },
        "lock": {
          "success": "{CHANNEL} was locked successfully.",
          "failure": "{CHANNEL} could not be locked."
        },
        "unlock": {
          "success": "{CHANNEL} was unlocked successfully.",
          "failure": "{CHANNEL} could not be unlocked."
        },
        "slowmode": {
          "success": "{CHANNEL} slowmode was set to {TIME}",
          "failure": "Could not set slowmode for {CHANNEL}",
          "reset": {
            "success": "{CHANNEL} slowmode was removed successfully",
            "failure": "Could not remove slowmode for {CHANNEL}"
          }
        },
        "verbal_warn": {
          "failure": "{MENTION} could not be verbally warned",
          "reason": "{MENTION}, {REASON}"
        },
        "no_reason_given": "No reason given.",
        "export_modlog": {
          "no_modlog": "{MENTION} does not have an existing modlog file."
        }
      },
      "commands": {
        "modlog": {
          "embed_title": "Modlog of {MENTION}",
          "empty_modlog": ":white_check_mark: This member has no modlog entries.",
          "overflow": "... and more entries",
          "failed": "Could not retrieve modlog for {MENTION}.",
          "paged": {
            "page_number": "Page {PAGE}/{PAGE_TOTAL}"
          }
        },
        "verbal_log": {
          "embed_title": "Verballog of {MENTION}",
          "empty_modlog": ":white_check_mark: This member has no verballog entries.",
          "overflow": "... and more entries",
          "failed": "Could not retrieve verballog for {MENTION}.",
          "paged": {
            "page_number": "Page {PAGE}/{PAGE_TOTAL}"
          }
        },
        "lock": {
          "whitelist": {
            "add": {
              "success": "{ROLE} was added successfully to the whitelist for {CHANNEL}.",
              "failure": "{ROLE} could not be added to the whitelist for {CHANNEL}.",
              "already_present": "{ROLE} was already whitelisted in {CHANNEL}."
            },
            "remove": {
              "success": "{ROLE} was removed successfully from the whitelist for {CHANNEL}.",
              "failure": "{ROLE} could not be removed from the whitelist for {CHANNEL}."
            }
          },
          "blacklist": {
            "add": {
              "success": "{ROLE} was added successfully to the blacklist for {CHANNEL}.",
              "failure": "{ROLE} could not be added to the blacklist for {CHANNEL}.",
              "already_present": "{ROLE} was already blacklisted in {CHANNEL}."
            },
            "remove": {
              "success": "{ROLE} was removed successfully from the blacklist for {CHANNEL}.",
              "failure": "{ROLE} could not be removed from the blacklist for {CHANNEL}."
            }
          }
        }
      },
      "permissions": {
        "error": {
          "permission_not_found": "Permission {PERMISSION} could not be found.",
          "no_permission_passed": "No permission was passed to the command.",
          "could_not_parse": "Could not parse command arguments.",
          "could_not_grant": "Could not grant permission {PERMISSION} to {MENTION}.",
          "could_not_neutralize": "Could not nullify permission override {PERMISSION} from {MENTION}",
          "could_not_deny": "Could not deny permission {PERMISSION} for {MENTION}.",
          "could_not_add_role": "Could not add role {ROLE} to {MENTION}.",
          "could_not_create": "Failed to create permission file for {MENTION}",
          "role_could_not_grant": "Could not grant permission {PERMISSION} to {MENTION}.",
          "role_could_not_neutralize": "Could not nullify permission override {PERMISSION} from {MENTION}.",
          "role_could_not_deny": "Could not deny permission {PERMISSION} for {MENTION}.",
          "role_could_not_add_parent": "Could not add parent {ROLE} to {MENTION}.",
          "role_could_not_create": "Failed to create permission file for {MENTION}."
        },
        "permission_granted": "Granted permission {PERMISSION} to {MENTION}.",
        "permission_neutralized": "Nullified permission override {PERMISSION} from {MENTION}.",
        "permission_denied": "Denied permission {PERMISSION} for {MENTION}.",
        "role_added": "Added role {ROLE} to {MENTION}.",
        "user_created": "Created permission file for {MENTION}.",
        "role_permission_granted": "Granted permission {PERMISSION} to {MENTION}.",
        "role_permission_neutralized": "Nullified permission override {PERMISSION} from {MENTION}.",
        "role_permission_denied": "Denied permission {PERMISSION} for {MENTION}.",
        "parent_added": "Added parent {ROLE} to {MENTION}.",
        "role_created": "Created permission file for {MENTION}.",
        "role_not_found": "Could not find role."
      },
      "tickets": {
        "new": ":white_check_mark: Successfully created ticket {TICKETCHANNEL}.",
        "close": "{TICKETCHANNEL} will be closed in {TICKETCLOSETIME}.",
        "cancelled_closing": "Cancelled closing of {CHANNEL}.",
        "add_user": {
          "not_a_ticket_channel": "{CHANNEL} is not a ticket channel, you cannot add users here."
        },
        "remove_user": {
          "not_a_ticket_channel": "{CHANNEL} is not a ticket channel, you cannot remove users from here."
        },
        "presets": {
          "new": "New preset {PRESET} was created successfully.",
          "error": {
            "not_found": "Preset {PRESET} was not found."
          },
          "category": {
            "get": "Preset {PRESET} currently uses category {CATEGORY}.",
            "set": "Preset {PRESET} was successfully set to use category {CATEGORY}."
          }
        }
      }
    }
  }
}